Author: Jan Beich <jbeich@FreeBSD.org>
Date:   Tue Apr 10 14:55:02 2018 +0000
Subject: Use pthread_setaffinity_np() on FreeBSD as well

This patch is based on upstream commit 225b0d75d1f2cdc62809c8572e933f9875b87893,
except that it disables pthread_np.h and it uses cpu_set_t instead of
cpuset_t. These changes are needed in light of the differences between
FreeBSD and GNU/kFreeBSD.

diff --git a/src/numa/freebsd/pin_thread.cpp b/src/numa/freebsd/pin_thread.cpp
index 28a45a1..0ff03d0 100644
--- a/libs/fiber/src/numa/freebsd/pin_thread.cpp
+++ b/libs/fiber/src/numa/freebsd/pin_thread.cpp
@@ -7,10 +7,8 @@
 #include "boost/fiber/numa/pin_thread.hpp"
 
 extern "C" {
-#include <errno.h>
-#include <sys/param.h>
-#include <sys/cpuset.h>
-#include <sys/thread.h>
+#include <pthread.h>
+//#include <pthread_np.h>
 }
 
 #include <system_error>
@@ -25,18 +23,19 @@ namespace numa {
 
 BOOST_FIBERS_DECL
 void pin_thread( std::uint32_t cpuid) {
-    pin_thread( cpuid, ::thr_self() );
+    pin_thread( cpuid, ::pthread_self() );
 }
 
 BOOST_FIBERS_DECL
 void pin_thread( std::uint32_t cpuid, std::thread::native_handle_type h) {
-	cpuset_t mask;
-	CPU_ZERO( & mask);
-	CPU_SET( cpuid, & mask);
-    if ( BOOST_UNLIKELY( 0 != ::cpuset_setaffinity( CPU_LEVEL_WHICH, CPU_WHICH_TID, h, sizeof( mask), & mask) ) ) {
+    cpu_set_t set;
+    CPU_ZERO( & set);
+    CPU_SET( cpuid, & set);
+    int err = 0;
+    if ( BOOST_UNLIKELY( 0 != ( err = ::pthread_setaffinity_np( h, sizeof( set), & set) ) ) ) {
         throw std::system_error(
-                std::error_code( errno, std::system_category() ),
-                "::cpuset_setaffinity() failed");
+                std::error_code( err, std::system_category() ),
+                "pthread_setaffinity_np() failed");
     }
 }
 
